Core:
  CPU:
    ☐ Complete the CPU's logic.
      ☐ Complete the CPU's ALU
        ✔ Data processing instructions @done (15-12-24 23:41)
        ☐ PSR transfer instructions
        ☐ Multiply instructions
        ☐ Multiply long instructions
        ☐ Single data swap instruction
        ☐ Branch instructions
        ☐ Branch and exchange instruction
        ☐ Halfword data transfer: register offset instructions
        ☐ Halfword data transfer: immediate offset instructions
        ☐ Single data transfer instructions
          ✔ Find out what the Negative/Positive Immediate Offsets are @done (15-12-30 15:56)
             They don't have any information about post/pre indexing
             or incrementing or decrementing. This is not in line with the
             other single data transfer instructions. They might not even be part
             of these instructions but they are in the same area in the table, so...
             FOUND VIA #TODO negative imm offset
             or #TODO positive imm offset
        ☐ Block data transfer instructions
        ☐ Software interrupt instructions
        ☐ Consider just inlining all of the stuff inside of the ALU.
           A lot of the things in the ALU, I was just going to write
           at their call sites anyways. None of them are very large
           so it might be worth forcing them to be inlined. Until I build more
           of this and get a chance to look though, I'm just going to assume that
           LLVM is already inlining them.
      ☐ Complete the CPU's ARM instructions.
      ☐ Complete the CPU's THUMB instructions.
      Accuracy+:
       ☐ Implement Gamepak Prefetch for the CPU
  MMU:
    ☐ Figure out how I want to do ioregsiters
        Right now I'm not sure if IO registers allow partial reads and writes.
        After figuring that out, I can create a strategy for how I want to handle them.
        For now there is no difference between them and all of the the GBA's other internal
        memory.
    ☐ Implement IO Registers.