use super::super::ArmCpu;
use super::arm_impl::*;

pub fn to_index(row: u32, column: u32) -> u32 {
	(row * 16) + column
}

pub fn run_instr(cpu: &mut ArmCpu, instr_idx: u32, instr: u32) {
	match instr_idx {
		0x0000 | 0x0008 => { arm_and_lli(cpu, instr); },
		0x0001 => { arm_and_llr(cpu, instr); },
		0x0002 | 0x000a => { arm_and_lri(cpu, instr); },
		0x0003 => { arm_and_lrr(cpu, instr); },
		0x0004 | 0x000c => { arm_and_ari(cpu, instr); },
		0x0005 => { arm_and_arr(cpu, instr); },
		0x0006 | 0x000e => { arm_and_rri(cpu, instr); },
		0x0007 => { arm_and_rrr(cpu, instr); },
		0x0009 => { arm_mul(cpu, instr); },
		0x000b | 0x002b => { arm_strh_ptrm(cpu, instr); },
		0x000d | 0x000f | 0x002d | 0x002f | 0x0049 | 0x004d | 0x004f | 0x0059 | 0x0069 | 0x006d | 0x006f | 0x0079 | 0x008d | 0x008f | 0x00ad | 0x00af | 0x00cd | 0x00cf | 0x00ed | 0x00ef | 0x0101 ... 0x0108 | 0x010a | 0x010c ... 0x010f | 0x0119 | 0x0122 ... 0x012a | 0x012c ... 0x012f | 0x0139 | 0x0141 ... 0x0148 | 0x014a | 0x014c ... 0x014f | 0x0159 | 0x0161 ... 0x016a | 0x016c ... 0x016f | 0x0179 | 0x0189 | 0x018d | 0x018f | 0x0199 | 0x01a9 | 0x01ad | 0x01af | 0x01b9 | 0x01c9 | 0x01cd | 0x01cf | 0x01d9 | 0x01e9 | 0x01ed | 0x01ef | 0x01f9 | 0x0300 ... 0x030f | 0x0340 ... 0x034f | 0x0601 | 0x0603 | 0x0605 | 0x0607 | 0x0609 | 0x060b | 0x060d | 0x060f | 0x0611 | 0x0613 | 0x0615 | 0x0617 | 0x0619 | 0x061b | 0x061d | 0x061f | 0x0621 | 0x0623 | 0x0625 | 0x0627 | 0x0629 | 0x062b | 0x062d | 0x062f | 0x0631 | 0x0633 | 0x0635 | 0x0637 | 0x0639 | 0x063b | 0x063d | 0x063f | 0x0641 | 0x0643 | 0x0645 | 0x0647 | 0x0649 | 0x064b | 0x064d | 0x064f | 0x0651 | 0x0653 | 0x0655 | 0x0657 | 0x0659 | 0x065b | 0x065d | 0x065f | 0x0661 | 0x0663 | 0x0665 | 0x0667 | 0x0669 | 0x066b | 0x066d | 0x066f | 0x0671 | 0x0673 | 0x0675 | 0x0677 | 0x0679 | 0x067b | 0x067d | 0x067f | 0x0681 | 0x0683 | 0x0685 | 0x0687 | 0x0689 | 0x068b | 0x068d | 0x068f | 0x0691 | 0x0693 | 0x0695 | 0x0697 | 0x0699 | 0x069b | 0x069d | 0x069f | 0x06a1 | 0x06a3 | 0x06a5 | 0x06a7 | 0x06a9 | 0x06ab | 0x06ad | 0x06af | 0x06b1 | 0x06b3 | 0x06b5 | 0x06b7 | 0x06b9 | 0x06bb | 0x06bd | 0x06bf | 0x06c1 | 0x06c3 | 0x06c5 | 0x06c7 | 0x06c9 | 0x06cb | 0x06cd | 0x06cf | 0x06d1 | 0x06d3 | 0x06d5 | 0x06d7 | 0x06d9 | 0x06db | 0x06dd | 0x06df | 0x06e1 | 0x06e3 | 0x06e5 | 0x06e7 | 0x06e9 | 0x06eb | 0x06ed | 0x06ef | 0x06f1 | 0x06f3 | 0x06f5 | 0x06f7 | 0x06f9 | 0x06fb | 0x06fd | 0x06ff | 0x0701 | 0x0703 | 0x0705 | 0x0707 | 0x0709 | 0x070b | 0x070d | 0x070f | 0x0711 | 0x0713 | 0x0715 | 0x0717 | 0x0719 | 0x071b | 0x071d | 0x071f | 0x0721 | 0x0723 | 0x0725 | 0x0727 | 0x0729 | 0x072b | 0x072d | 0x072f | 0x0731 | 0x0733 | 0x0735 | 0x0737 | 0x0739 | 0x073b | 0x073d | 0x073f | 0x0741 | 0x0743 | 0x0745 | 0x0747 | 0x0749 | 0x074b | 0x074d | 0x074f | 0x0751 | 0x0753 | 0x0755 | 0x0757 | 0x0759 | 0x075b | 0x075d | 0x075f | 0x0761 | 0x0763 | 0x0765 | 0x0767 | 0x0769 | 0x076b | 0x076d | 0x076f | 0x0771 | 0x0773 | 0x0775 | 0x0777 | 0x0779 | 0x077b | 0x077d | 0x077f | 0x0781 | 0x0783 | 0x0785 | 0x0787 | 0x0789 | 0x078b | 0x078d | 0x078f | 0x0791 | 0x0793 | 0x0795 | 0x0797 | 0x0799 | 0x079b | 0x079d | 0x079f | 0x07a1 | 0x07a3 | 0x07a5 | 0x07a7 | 0x07a9 | 0x07ab | 0x07ad | 0x07af | 0x07b1 | 0x07b3 | 0x07b5 | 0x07b7 | 0x07b9 | 0x07bb | 0x07bd | 0x07bf | 0x07c1 | 0x07c3 | 0x07c5 | 0x07c7 | 0x07c9 | 0x07cb | 0x07cd | 0x07cf | 0x07d1 | 0x07d3 | 0x07d5 | 0x07d7 | 0x07d9 | 0x07db | 0x07dd | 0x07df | 0x07e1 | 0x07e3 | 0x07e5 | 0x07e7 | 0x07e9 | 0x07eb | 0x07ed | 0x07ef | 0x07f1 | 0x07f3 | 0x07f5 | 0x07f7 | 0x07f9 | 0x07fb | 0x07fd | 0x07ff => { arm_undefined(cpu, instr); },
		0x0010 | 0x0018 => { arm_ands_lli(cpu, instr); },
		0x0011 => { arm_ands_llr(cpu, instr); },
		0x0012 | 0x001a => { arm_ands_lri(cpu, instr); },
		0x0013 => { arm_ands_lrr(cpu, instr); },
		0x0014 | 0x001c => { arm_ands_ari(cpu, instr); },
		0x0015 => { arm_ands_arr(cpu, instr); },
		0x0016 | 0x001e => { arm_ands_rri(cpu, instr); },
		0x0017 => { arm_ands_rrr(cpu, instr); },
		0x0019 => { arm_muls(cpu, instr); },
		0x001b | 0x003b => { arm_ldrh_ptrm(cpu, instr); },
		0x001d | 0x003d => { arm_ldrsb_ptrm(cpu, instr); },
		0x001f | 0x003f => { arm_ldrsh_ptrm(cpu, instr); },
		0x0020 | 0x0028 => { arm_eor_lli(cpu, instr); },
		0x0021 => { arm_eor_llr(cpu, instr); },
		0x0022 | 0x002a => { arm_eor_lri(cpu, instr); },
		0x0023 => { arm_eor_lrr(cpu, instr); },
		0x0024 | 0x002c => { arm_eor_ari(cpu, instr); },
		0x0025 => { arm_eor_arr(cpu, instr); },
		0x0026 | 0x002e => { arm_eor_rri(cpu, instr); },
		0x0027 => { arm_eor_rrr(cpu, instr); },
		0x0029 => { arm_mla(cpu, instr); },
		0x0030 | 0x0038 => { arm_eors_lli(cpu, instr); },
		0x0031 => { arm_eors_llr(cpu, instr); },
		0x0032 | 0x003a => { arm_eors_lri(cpu, instr); },
		0x0033 => { arm_eors_lrr(cpu, instr); },
		0x0034 | 0x003c => { arm_eors_ari(cpu, instr); },
		0x0035 => { arm_eors_arr(cpu, instr); },
		0x0036 | 0x003e => { arm_eors_rri(cpu, instr); },
		0x0037 => { arm_eors_rrr(cpu, instr); },
		0x0039 => { arm_mlas(cpu, instr); },
		0x0040 | 0x0048 => { arm_sub_lli(cpu, instr); },
		0x0041 => { arm_sub_llr(cpu, instr); },
		0x0042 | 0x004a => { arm_sub_lri(cpu, instr); },
		0x0043 => { arm_sub_lrr(cpu, instr); },
		0x0044 | 0x004c => { arm_sub_ari(cpu, instr); },
		0x0045 => { arm_sub_arr(cpu, instr); },
		0x0046 | 0x004e => { arm_sub_rri(cpu, instr); },
		0x0047 => { arm_sub_rrr(cpu, instr); },
		0x004b | 0x006b => { arm_strh_ptim(cpu, instr); },
		0x0050 | 0x0058 => { arm_subs_lli(cpu, instr); },
		0x0051 => { arm_subs_llr(cpu, instr); },
		0x0052 | 0x005a => { arm_subs_lri(cpu, instr); },
		0x0053 => { arm_subs_lrr(cpu, instr); },
		0x0054 | 0x005c => { arm_subs_ari(cpu, instr); },
		0x0055 => { arm_subs_arr(cpu, instr); },
		0x0056 | 0x005e => { arm_subs_rri(cpu, instr); },
		0x0057 => { arm_subs_rrr(cpu, instr); },
		0x005b | 0x007b => { arm_ldrh_ptim(cpu, instr); },
		0x005d | 0x007d => { arm_ldrsb_ptim(cpu, instr); },
		0x005f | 0x007f => { arm_ldrsh_ptim(cpu, instr); },
		0x0060 | 0x0068 => { arm_rsb_lli(cpu, instr); },
		0x0061 => { arm_rsb_llr(cpu, instr); },
		0x0062 | 0x006a => { arm_rsb_lri(cpu, instr); },
		0x0063 => { arm_rsb_lrr(cpu, instr); },
		0x0064 | 0x006c => { arm_rsb_ari(cpu, instr); },
		0x0065 => { arm_rsb_arr(cpu, instr); },
		0x0066 | 0x006e => { arm_rsb_rri(cpu, instr); },
		0x0067 => { arm_rsb_rrr(cpu, instr); },
		0x0070 | 0x0078 => { arm_rsbs_lli(cpu, instr); },
		0x0071 => { arm_rsbs_llr(cpu, instr); },
		0x0072 | 0x007a => { arm_rsbs_lri(cpu, instr); },
		0x0073 => { arm_rsbs_lrr(cpu, instr); },
		0x0074 | 0x007c => { arm_rsbs_ari(cpu, instr); },
		0x0075 => { arm_rsbs_arr(cpu, instr); },
		0x0076 | 0x007e => { arm_rsbs_rri(cpu, instr); },
		0x0077 => { arm_rsbs_rrr(cpu, instr); },
		0x0080 | 0x0088 => { arm_add_lli(cpu, instr); },
		0x0081 => { arm_add_llr(cpu, instr); },
		0x0082 | 0x008a => { arm_add_lri(cpu, instr); },
		0x0083 => { arm_add_lrr(cpu, instr); },
		0x0084 | 0x008c => { arm_add_ari(cpu, instr); },
		0x0085 => { arm_add_arr(cpu, instr); },
		0x0086 | 0x008e => { arm_add_rri(cpu, instr); },
		0x0087 => { arm_add_rrr(cpu, instr); },
		0x0089 => { arm_umull(cpu, instr); },
		0x008b | 0x00ab => { arm_strh_ptrp(cpu, instr); },
		0x0090 | 0x0098 => { arm_adds_lli(cpu, instr); },
		0x0091 => { arm_adds_llr(cpu, instr); },
		0x0092 | 0x009a => { arm_adds_lri(cpu, instr); },
		0x0093 => { arm_adds_lrr(cpu, instr); },
		0x0094 | 0x009c => { arm_adds_ari(cpu, instr); },
		0x0095 => { arm_adds_arr(cpu, instr); },
		0x0096 | 0x009e => { arm_adds_rri(cpu, instr); },
		0x0097 => { arm_adds_rrr(cpu, instr); },
		0x0099 => { arm_umulls(cpu, instr); },
		0x009b | 0x00bb => { arm_ldrh_ptrp(cpu, instr); },
		0x009d | 0x00bd => { arm_ldrsb_ptrp(cpu, instr); },
		0x009f | 0x00bf => { arm_ldrsh_ptrp(cpu, instr); },
		0x00a0 | 0x00a8 => { arm_adc_lli(cpu, instr); },
		0x00a1 => { arm_adc_llr(cpu, instr); },
		0x00a2 | 0x00aa => { arm_adc_lri(cpu, instr); },
		0x00a3 => { arm_adc_lrr(cpu, instr); },
		0x00a4 | 0x00ac => { arm_adc_ari(cpu, instr); },
		0x00a5 => { arm_adc_arr(cpu, instr); },
		0x00a6 | 0x00ae => { arm_adc_rri(cpu, instr); },
		0x00a7 => { arm_adc_rrr(cpu, instr); },
		0x00a9 => { arm_umlal(cpu, instr); },
		0x00b0 | 0x00b8 => { arm_adcs_lli(cpu, instr); },
		0x00b1 => { arm_adcs_llr(cpu, instr); },
		0x00b2 | 0x00ba => { arm_adcs_lri(cpu, instr); },
		0x00b3 => { arm_adcs_lrr(cpu, instr); },
		0x00b4 | 0x00bc => { arm_adcs_ari(cpu, instr); },
		0x00b5 => { arm_adcs_arr(cpu, instr); },
		0x00b6 | 0x00be => { arm_adcs_rri(cpu, instr); },
		0x00b7 => { arm_adcs_rrr(cpu, instr); },
		0x00b9 => { arm_umlals(cpu, instr); },
		0x00c0 | 0x00c8 => { arm_sbc_lli(cpu, instr); },
		0x00c1 => { arm_sbc_llr(cpu, instr); },
		0x00c2 | 0x00ca => { arm_sbc_lri(cpu, instr); },
		0x00c3 => { arm_sbc_lrr(cpu, instr); },
		0x00c4 | 0x00cc => { arm_sbc_ari(cpu, instr); },
		0x00c5 => { arm_sbc_arr(cpu, instr); },
		0x00c6 | 0x00ce => { arm_sbc_rri(cpu, instr); },
		0x00c7 => { arm_sbc_rrr(cpu, instr); },
		0x00c9 => { arm_smull(cpu, instr); },
		0x00cb | 0x00eb => { arm_strh_ptip(cpu, instr); },
		0x00d0 | 0x00d8 => { arm_sbcs_lli(cpu, instr); },
		0x00d1 => { arm_sbcs_llr(cpu, instr); },
		0x00d2 | 0x00da => { arm_sbcs_lri(cpu, instr); },
		0x00d3 => { arm_sbcs_lrr(cpu, instr); },
		0x00d4 | 0x00dc => { arm_sbcs_ari(cpu, instr); },
		0x00d5 => { arm_sbcs_arr(cpu, instr); },
		0x00d6 | 0x00de => { arm_sbcs_rri(cpu, instr); },
		0x00d7 => { arm_sbcs_rrr(cpu, instr); },
		0x00d9 => { arm_smulls(cpu, instr); },
		0x00db | 0x00fb => { arm_ldrh_ptip(cpu, instr); },
		0x00dd | 0x00fd => { arm_ldrsb_ptip(cpu, instr); },
		0x00df | 0x00ff => { arm_ldrsh_ptip(cpu, instr); },
		0x00e0 | 0x00e8 => { arm_rsc_lli(cpu, instr); },
		0x00e1 => { arm_rsc_llr(cpu, instr); },
		0x00e2 | 0x00ea => { arm_rsc_lri(cpu, instr); },
		0x00e3 => { arm_rsc_lrr(cpu, instr); },
		0x00e4 | 0x00ec => { arm_rsc_ari(cpu, instr); },
		0x00e5 => { arm_rsc_arr(cpu, instr); },
		0x00e6 | 0x00ee => { arm_rsc_rri(cpu, instr); },
		0x00e7 => { arm_rsc_rrr(cpu, instr); },
		0x00e9 => { arm_smlal(cpu, instr); },
		0x00f0 | 0x00f8 => { arm_rscs_lli(cpu, instr); },
		0x00f1 => { arm_rscs_llr(cpu, instr); },
		0x00f2 | 0x00fa => { arm_rscs_lri(cpu, instr); },
		0x00f3 => { arm_rscs_lrr(cpu, instr); },
		0x00f4 | 0x00fc => { arm_rscs_ari(cpu, instr); },
		0x00f5 => { arm_rscs_arr(cpu, instr); },
		0x00f6 | 0x00fe => { arm_rscs_rri(cpu, instr); },
		0x00f7 => { arm_rscs_rrr(cpu, instr); },
		0x00f9 => { arm_smlals(cpu, instr); },
		0x0100 => { arm_mrs_rc(cpu, instr); },
		0x0109 => { arm_swp(cpu, instr); },
		0x010b => { arm_strh_ofrm(cpu, instr); },
		0x0110 | 0x0118 => { arm_tsts_lli(cpu, instr); },
		0x0111 => { arm_tsts_llr(cpu, instr); },
		0x0112 | 0x011a => { arm_tsts_lri(cpu, instr); },
		0x0113 => { arm_tsts_lrr(cpu, instr); },
		0x0114 | 0x011c => { arm_tsts_ari(cpu, instr); },
		0x0115 => { arm_tsts_arr(cpu, instr); },
		0x0116 | 0x011e => { arm_tsts_rri(cpu, instr); },
		0x0117 => { arm_tsts_rrr(cpu, instr); },
		0x011b => { arm_ldrh_ofrm(cpu, instr); },
		0x011d => { arm_ldrsb_ofrm(cpu, instr); },
		0x011f => { arm_ldrsh_ofrm(cpu, instr); },
		0x0120 => { arm_msr_rc(cpu, instr); },
		0x0121 => { arm_bx(cpu, instr); },
		0x012b => { arm_strh_prrm(cpu, instr); },
		0x0130 | 0x0138 => { arm_teqs_lli(cpu, instr); },
		0x0131 => { arm_teqs_llr(cpu, instr); },
		0x0132 | 0x013a => { arm_teqs_lri(cpu, instr); },
		0x0133 => { arm_teqs_lrr(cpu, instr); },
		0x0134 | 0x013c => { arm_teqs_ari(cpu, instr); },
		0x0135 => { arm_teqs_arr(cpu, instr); },
		0x0136 | 0x013e => { arm_teqs_rri(cpu, instr); },
		0x0137 => { arm_teqs_rrr(cpu, instr); },
		0x013b => { arm_ldrh_prrm(cpu, instr); },
		0x013d => { arm_ldrsb_prrm(cpu, instr); },
		0x013f => { arm_ldrsh_prrm(cpu, instr); },
		0x0140 => { arm_mrs_rs(cpu, instr); },
		0x0149 => { arm_swpb(cpu, instr); },
		0x014b => { arm_strh_ofim(cpu, instr); },
		0x0150 | 0x0158 => { arm_cmps_lli(cpu, instr); },
		0x0151 => { arm_cmps_llr(cpu, instr); },
		0x0152 | 0x015a => { arm_cmps_lri(cpu, instr); },
		0x0153 => { arm_cmps_lrr(cpu, instr); },
		0x0154 | 0x015c => { arm_cmps_ari(cpu, instr); },
		0x0155 => { arm_cmps_arr(cpu, instr); },
		0x0156 | 0x015e => { arm_cmps_rri(cpu, instr); },
		0x0157 => { arm_cmps_rrr(cpu, instr); },
		0x015b => { arm_ldrh_ofim(cpu, instr); },
		0x015d => { arm_ldrsb_ofim(cpu, instr); },
		0x015f => { arm_ldrsh_ofim(cpu, instr); },
		0x0160 => { arm_msr_rs(cpu, instr); },
		0x016b => { arm_strh_prim(cpu, instr); },
		0x0170 | 0x0178 => { arm_cmns_lli(cpu, instr); },
		0x0171 => { arm_cmns_llr(cpu, instr); },
		0x0172 | 0x017a => { arm_cmns_lri(cpu, instr); },
		0x0173 => { arm_cmns_lrr(cpu, instr); },
		0x0174 | 0x017c => { arm_cmns_ari(cpu, instr); },
		0x0175 => { arm_cmns_arr(cpu, instr); },
		0x0176 | 0x017e => { arm_cmns_rri(cpu, instr); },
		0x0177 => { arm_cmns_rrr(cpu, instr); },
		0x017b => { arm_ldrh_prim(cpu, instr); },
		0x017d => { arm_ldrsb_prim(cpu, instr); },
		0x017f => { arm_ldrsh_prim(cpu, instr); },
		0x0180 | 0x0188 => { arm_orr_lli(cpu, instr); },
		0x0181 => { arm_orr_llr(cpu, instr); },
		0x0182 | 0x018a => { arm_orr_lri(cpu, instr); },
		0x0183 => { arm_orr_lrr(cpu, instr); },
		0x0184 | 0x018c => { arm_orr_ari(cpu, instr); },
		0x0185 => { arm_orr_arr(cpu, instr); },
		0x0186 | 0x018e => { arm_orr_rri(cpu, instr); },
		0x0187 => { arm_orr_rrr(cpu, instr); },
		0x018b => { arm_strh_ofrp(cpu, instr); },
		0x0190 | 0x0198 => { arm_orrs_lli(cpu, instr); },
		0x0191 => { arm_orrs_llr(cpu, instr); },
		0x0192 | 0x019a => { arm_orrs_lri(cpu, instr); },
		0x0193 => { arm_orrs_lrr(cpu, instr); },
		0x0194 | 0x019c => { arm_orrs_ari(cpu, instr); },
		0x0195 => { arm_orrs_arr(cpu, instr); },
		0x0196 | 0x019e => { arm_orrs_rri(cpu, instr); },
		0x0197 => { arm_orrs_rrr(cpu, instr); },
		0x019b => { arm_ldrh_ofrp(cpu, instr); },
		0x019d => { arm_ldrsb_ofrp(cpu, instr); },
		0x019f => { arm_ldrsh_ofrp(cpu, instr); },
		0x01a0 | 0x01a8 => { arm_mov_lli(cpu, instr); },
		0x01a1 => { arm_mov_llr(cpu, instr); },
		0x01a2 | 0x01aa => { arm_mov_lri(cpu, instr); },
		0x01a3 => { arm_mov_lrr(cpu, instr); },
		0x01a4 | 0x01ac => { arm_mov_ari(cpu, instr); },
		0x01a5 => { arm_mov_arr(cpu, instr); },
		0x01a6 | 0x01ae => { arm_mov_rri(cpu, instr); },
		0x01a7 => { arm_mov_rrr(cpu, instr); },
		0x01ab => { arm_strh_prrp(cpu, instr); },
		0x01b0 | 0x01b8 => { arm_movs_lli(cpu, instr); },
		0x01b1 => { arm_movs_llr(cpu, instr); },
		0x01b2 | 0x01ba => { arm_movs_lri(cpu, instr); },
		0x01b3 => { arm_movs_lrr(cpu, instr); },
		0x01b4 | 0x01bc => { arm_movs_ari(cpu, instr); },
		0x01b5 => { arm_movs_arr(cpu, instr); },
		0x01b6 | 0x01be => { arm_movs_rri(cpu, instr); },
		0x01b7 => { arm_movs_rrr(cpu, instr); },
		0x01bb => { arm_ldrh_prrp(cpu, instr); },
		0x01bd => { arm_ldrsb_prrp(cpu, instr); },
		0x01bf => { arm_ldrsh_prrp(cpu, instr); },
		0x01c0 | 0x01c8 => { arm_bic_lli(cpu, instr); },
		0x01c1 => { arm_bic_llr(cpu, instr); },
		0x01c2 | 0x01ca => { arm_bic_lri(cpu, instr); },
		0x01c3 => { arm_bic_lrr(cpu, instr); },
		0x01c4 | 0x01cc => { arm_bic_ari(cpu, instr); },
		0x01c5 => { arm_bic_arr(cpu, instr); },
		0x01c6 | 0x01ce => { arm_bic_rri(cpu, instr); },
		0x01c7 => { arm_bic_rrr(cpu, instr); },
		0x01cb => { arm_strh_ofip(cpu, instr); },
		0x01d0 | 0x01d8 => { arm_bics_lli(cpu, instr); },
		0x01d1 => { arm_bics_llr(cpu, instr); },
		0x01d2 | 0x01da => { arm_bics_lri(cpu, instr); },
		0x01d3 => { arm_bics_lrr(cpu, instr); },
		0x01d4 | 0x01dc => { arm_bics_ari(cpu, instr); },
		0x01d5 => { arm_bics_arr(cpu, instr); },
		0x01d6 | 0x01de => { arm_bics_rri(cpu, instr); },
		0x01d7 => { arm_bics_rrr(cpu, instr); },
		0x01db => { arm_ldrh_ofip(cpu, instr); },
		0x01dd => { arm_ldrsb_ofip(cpu, instr); },
		0x01df => { arm_ldrsh_ofip(cpu, instr); },
		0x01e0 | 0x01e8 => { arm_mvn_lli(cpu, instr); },
		0x01e1 => { arm_mvn_llr(cpu, instr); },
		0x01e2 | 0x01ea => { arm_mvn_lri(cpu, instr); },
		0x01e3 => { arm_mvn_lrr(cpu, instr); },
		0x01e4 | 0x01ec => { arm_mvn_ari(cpu, instr); },
		0x01e5 => { arm_mvn_arr(cpu, instr); },
		0x01e6 | 0x01ee => { arm_mvn_rri(cpu, instr); },
		0x01e7 => { arm_mvn_rrr(cpu, instr); },
		0x01eb => { arm_strh_prip(cpu, instr); },
		0x01f0 | 0x01f8 => { arm_mvns_lli(cpu, instr); },
		0x01f1 => { arm_mvns_llr(cpu, instr); },
		0x01f2 | 0x01fa => { arm_mvns_lri(cpu, instr); },
		0x01f3 => { arm_mvns_lrr(cpu, instr); },
		0x01f4 | 0x01fc => { arm_mvns_ari(cpu, instr); },
		0x01f5 => { arm_mvns_arr(cpu, instr); },
		0x01f6 | 0x01fe => { arm_mvns_rri(cpu, instr); },
		0x01f7 => { arm_mvns_rrr(cpu, instr); },
		0x01fb => { arm_ldrh_prip(cpu, instr); },
		0x01fd => { arm_ldrsb_prip(cpu, instr); },
		0x01ff => { arm_ldrsh_prip(cpu, instr); },
		0x0200 ... 0x020f => { arm_and_imm(cpu, instr); },
		0x0210 ... 0x021f => { arm_ands_imm(cpu, instr); },
		0x0220 ... 0x022f => { arm_eor_imm(cpu, instr); },
		0x0230 ... 0x023f => { arm_eors_imm(cpu, instr); },
		0x0240 ... 0x024f => { arm_sub_imm(cpu, instr); },
		0x0250 ... 0x025f => { arm_subs_imm(cpu, instr); },
		0x0260 ... 0x026f => { arm_rsb_imm(cpu, instr); },
		0x0270 ... 0x027f => { arm_rsbs_imm(cpu, instr); },
		0x0280 ... 0x028f => { arm_add_imm(cpu, instr); },
		0x0290 ... 0x029f => { arm_adds_imm(cpu, instr); },
		0x02a0 ... 0x02af => { arm_adc_imm(cpu, instr); },
		0x02b0 ... 0x02bf => { arm_adcs_imm(cpu, instr); },
		0x02c0 ... 0x02cf => { arm_sbc_imm(cpu, instr); },
		0x02d0 ... 0x02df => { arm_sbcs_imm(cpu, instr); },
		0x02e0 ... 0x02ef => { arm_rsc_imm(cpu, instr); },
		0x02f0 ... 0x02ff => { arm_rscs_imm(cpu, instr); },
		0x0310 ... 0x031f => { arm_tsts_imm(cpu, instr); },
		0x0320 ... 0x032f => { arm_msr_ic(cpu, instr); },
		0x0330 ... 0x033f => { arm_teqs_imm(cpu, instr); },
		0x0350 ... 0x035f => { arm_cmps_imm(cpu, instr); },
		0x0360 ... 0x036f => { arm_msr_is(cpu, instr); },
		0x0370 ... 0x037f => { arm_cmns_imm(cpu, instr); },
		0x0380 ... 0x038f => { arm_orr_imm(cpu, instr); },
		0x0390 ... 0x039f => { arm_orrs_imm(cpu, instr); },
		0x03a0 ... 0x03af => { arm_mov_imm(cpu, instr); },
		0x03b0 ... 0x03bf => { arm_movs_imm(cpu, instr); },
		0x03c0 ... 0x03cf => { arm_bic_imm(cpu, instr); },
		0x03d0 ... 0x03df => { arm_bics_imm(cpu, instr); },
		0x03e0 ... 0x03ef => { arm_mvn_imm(cpu, instr); },
		0x03f0 ... 0x03ff => { arm_mvns_imm(cpu, instr); },
		0x0400 ... 0x040f => { arm_str_ptim(cpu, instr); },
		0x0410 ... 0x041f => { arm_ldr_ptim(cpu, instr); },
		0x0420 ... 0x042f => { arm_strt_ptim(cpu, instr); },
		0x0430 ... 0x043f => { arm_ldrt_ptim(cpu, instr); },
		0x0440 ... 0x044f => { arm_strb_ptim(cpu, instr); },
		0x0450 ... 0x045f => { arm_ldrb_ptim(cpu, instr); },
		0x0460 ... 0x046f => { arm_strbt_ptim(cpu, instr); },
		0x0470 ... 0x047f => { arm_ldrbt_ptim(cpu, instr); },
		0x0480 ... 0x048f => { arm_str_ptip(cpu, instr); },
		0x0490 ... 0x049f => { arm_ldr_ptip(cpu, instr); },
		0x04a0 ... 0x04af => { arm_strt_ptip(cpu, instr); },
		0x04b0 ... 0x04bf => { arm_ldrt_ptip(cpu, instr); },
		0x04c0 ... 0x04cf => { arm_strb_ptip(cpu, instr); },
		0x04d0 ... 0x04df => { arm_ldrb_ptip(cpu, instr); },
		0x04e0 ... 0x04ef => { arm_strbt_ptip(cpu, instr); },
		0x04f0 ... 0x04ff => { arm_ldrbt_ptip(cpu, instr); },
		0x0500 ... 0x050f => { arm_str_ofim(cpu, instr); },
		0x0510 ... 0x051f => { arm_ldr_ofim(cpu, instr); },
		0x0520 ... 0x052f => { arm_str_prim(cpu, instr); },
		0x0530 ... 0x053f => { arm_ldr_prim(cpu, instr); },
		0x0540 ... 0x054f => { arm_strb_ofim(cpu, instr); },
		0x0550 ... 0x055f => { arm_ldrb_ofim(cpu, instr); },
		0x0560 ... 0x056f => { arm_strb_prim(cpu, instr); },
		0x0570 ... 0x057f => { arm_ldrb_prim(cpu, instr); },
		0x0580 ... 0x058f => { arm_str_ofip(cpu, instr); },
		0x0590 ... 0x059f => { arm_ldr_ofip(cpu, instr); },
		0x05a0 ... 0x05af => { arm_str_prip(cpu, instr); },
		0x05b0 ... 0x05bf => { arm_ldr_prip(cpu, instr); },
		0x05c0 ... 0x05cf => { arm_strb_ofip(cpu, instr); },
		0x05d0 ... 0x05df => { arm_ldrb_ofip(cpu, instr); },
		0x05e0 ... 0x05ef => { arm_strb_prip(cpu, instr); },
		0x05f0 ... 0x05ff => { arm_ldrb_prip(cpu, instr); },
		0x0600 | 0x0608 => { arm_str_ptrmll(cpu, instr); },
		0x0602 | 0x060a => { arm_str_ptrmlr(cpu, instr); },
		0x0604 | 0x060c => { arm_str_ptrmar(cpu, instr); },
		0x0606 | 0x060e => { arm_str_ptrmrr(cpu, instr); },
		0x0610 | 0x0618 => { arm_ldr_ptrmll(cpu, instr); },
		0x0612 | 0x061a => { arm_ldr_ptrmlr(cpu, instr); },
		0x0614 | 0x061c => { arm_ldr_ptrmar(cpu, instr); },
		0x0616 | 0x061e => { arm_ldr_ptrmrr(cpu, instr); },
		0x0620 | 0x0628 => { arm_strt_ptrmll(cpu, instr); },
		0x0622 | 0x062a => { arm_strt_ptrmlr(cpu, instr); },
		0x0624 | 0x062c => { arm_strt_ptrmar(cpu, instr); },
		0x0626 | 0x062e => { arm_strt_ptrmrr(cpu, instr); },
		0x0630 | 0x0638 => { arm_ldrt_ptrmll(cpu, instr); },
		0x0632 | 0x063a => { arm_ldrt_ptrmlr(cpu, instr); },
		0x0634 | 0x063c => { arm_ldrt_ptrmar(cpu, instr); },
		0x0636 | 0x063e => { arm_ldrt_ptrmrr(cpu, instr); },
		0x0640 | 0x0648 => { arm_strb_ptrmll(cpu, instr); },
		0x0642 | 0x064a => { arm_strb_ptrmlr(cpu, instr); },
		0x0644 | 0x064c => { arm_strb_ptrmar(cpu, instr); },
		0x0646 | 0x064e => { arm_strb_ptrmrr(cpu, instr); },
		0x0650 | 0x0658 => { arm_ldrb_ptrmll(cpu, instr); },
		0x0652 | 0x065a => { arm_ldrb_ptrmlr(cpu, instr); },
		0x0654 | 0x065c => { arm_ldrb_ptrmar(cpu, instr); },
		0x0656 | 0x065e => { arm_ldrb_ptrmrr(cpu, instr); },
		0x0660 | 0x0668 => { arm_strbt_ptrmll(cpu, instr); },
		0x0662 | 0x066a => { arm_strbt_ptrmlr(cpu, instr); },
		0x0664 | 0x066c => { arm_strbt_ptrmar(cpu, instr); },
		0x0666 | 0x066e => { arm_strbt_ptrmrr(cpu, instr); },
		0x0670 | 0x0678 => { arm_ldrbt_ptrmll(cpu, instr); },
		0x0672 | 0x067a => { arm_ldrbt_ptrmlr(cpu, instr); },
		0x0674 | 0x067c => { arm_ldrbt_ptrmar(cpu, instr); },
		0x0676 | 0x067e => { arm_ldrbt_ptrmrr(cpu, instr); },
		0x0680 | 0x0688 => { arm_str_ptrpll(cpu, instr); },
		0x0682 | 0x068a => { arm_str_ptrplr(cpu, instr); },
		0x0684 | 0x068c => { arm_str_ptrpar(cpu, instr); },
		0x0686 | 0x068e => { arm_str_ptrprr(cpu, instr); },
		0x0690 | 0x0698 => { arm_ldr_ptrpll(cpu, instr); },
		0x0692 | 0x069a => { arm_ldr_ptrplr(cpu, instr); },
		0x0694 | 0x069c => { arm_ldr_ptrpar(cpu, instr); },
		0x0696 | 0x069e => { arm_ldr_ptrprr(cpu, instr); },
		0x06a0 | 0x06a8 => { arm_strt_ptrpll(cpu, instr); },
		0x06a2 | 0x06aa => { arm_strt_ptrplr(cpu, instr); },
		0x06a4 | 0x06ac => { arm_strt_ptrpar(cpu, instr); },
		0x06a6 | 0x06ae => { arm_strt_ptrprr(cpu, instr); },
		0x06b0 | 0x06b8 => { arm_ldrt_ptrpll(cpu, instr); },
		0x06b2 | 0x06ba => { arm_ldrt_ptrplr(cpu, instr); },
		0x06b4 | 0x06bc => { arm_ldrt_ptrpar(cpu, instr); },
		0x06b6 | 0x06be => { arm_ldrt_ptrprr(cpu, instr); },
		0x06c0 | 0x06c8 => { arm_strb_ptrpll(cpu, instr); },
		0x06c2 | 0x06ca => { arm_strb_ptrplr(cpu, instr); },
		0x06c4 | 0x06cc => { arm_strb_ptrpar(cpu, instr); },
		0x06c6 | 0x06ce => { arm_strb_ptrprr(cpu, instr); },
		0x06d0 | 0x06d8 => { arm_ldrb_ptrpll(cpu, instr); },
		0x06d2 | 0x06da => { arm_ldrb_ptrplr(cpu, instr); },
		0x06d4 | 0x06dc => { arm_ldrb_ptrpar(cpu, instr); },
		0x06d6 | 0x06de => { arm_ldrb_ptrprr(cpu, instr); },
		0x06e0 | 0x06e8 => { arm_strbt_ptrpll(cpu, instr); },
		0x06e2 | 0x06ea => { arm_strbt_ptrplr(cpu, instr); },
		0x06e4 | 0x06ec => { arm_strbt_ptrpar(cpu, instr); },
		0x06e6 | 0x06ee => { arm_strbt_ptrprr(cpu, instr); },
		0x06f0 | 0x06f8 => { arm_ldrbt_ptrpll(cpu, instr); },
		0x06f2 | 0x06fa => { arm_ldrbt_ptrplr(cpu, instr); },
		0x06f4 | 0x06fc => { arm_ldrbt_ptrpar(cpu, instr); },
		0x06f6 | 0x06fe => { arm_ldrbt_ptrprr(cpu, instr); },
		0x0700 | 0x0708 => { arm_str_ofrmll(cpu, instr); },
		0x0702 | 0x070a => { arm_str_ofrmlr(cpu, instr); },
		0x0704 | 0x070c => { arm_str_ofrmar(cpu, instr); },
		0x0706 | 0x070e => { arm_str_ofrmrr(cpu, instr); },
		0x0710 | 0x0718 => { arm_ldr_ofrmll(cpu, instr); },
		0x0712 | 0x071a => { arm_ldr_ofrmlr(cpu, instr); },
		0x0714 | 0x071c => { arm_ldr_ofrmar(cpu, instr); },
		0x0716 | 0x071e => { arm_ldr_ofrmrr(cpu, instr); },
		0x0720 | 0x0728 => { arm_str_prrmll(cpu, instr); },
		0x0722 | 0x072a => { arm_str_prrmlr(cpu, instr); },
		0x0724 | 0x072c => { arm_str_prrmar(cpu, instr); },
		0x0726 | 0x072e => { arm_str_prrmrr(cpu, instr); },
		0x0730 | 0x0738 => { arm_ldr_prrmll(cpu, instr); },
		0x0732 | 0x073a => { arm_ldr_prrmlr(cpu, instr); },
		0x0734 | 0x073c => { arm_ldr_prrmar(cpu, instr); },
		0x0736 | 0x073e => { arm_ldr_prrmrr(cpu, instr); },
		0x0740 | 0x0748 => { arm_strb_ofrmll(cpu, instr); },
		0x0742 | 0x074a => { arm_strb_ofrmlr(cpu, instr); },
		0x0744 | 0x074c => { arm_strb_ofrmar(cpu, instr); },
		0x0746 | 0x074e => { arm_strb_ofrmrr(cpu, instr); },
		0x0750 | 0x0758 => { arm_ldrb_ofrmll(cpu, instr); },
		0x0752 | 0x075a => { arm_ldrb_ofrmlr(cpu, instr); },
		0x0754 | 0x075c => { arm_ldrb_ofrmar(cpu, instr); },
		0x0756 | 0x075e => { arm_ldrb_ofrmrr(cpu, instr); },
		0x0760 | 0x0768 => { arm_strb_prrmll(cpu, instr); },
		0x0762 | 0x076a => { arm_strb_prrmlr(cpu, instr); },
		0x0764 | 0x076c => { arm_strb_prrmar(cpu, instr); },
		0x0766 | 0x076e => { arm_strb_prrmrr(cpu, instr); },
		0x0770 | 0x0778 => { arm_ldrb_prrmll(cpu, instr); },
		0x0772 | 0x077a => { arm_ldrb_prrmlr(cpu, instr); },
		0x0774 | 0x077c => { arm_ldrb_prrmar(cpu, instr); },
		0x0776 | 0x077e => { arm_ldrb_prrmrr(cpu, instr); },
		0x0780 | 0x0788 => { arm_str_ofrpll(cpu, instr); },
		0x0782 | 0x078a => { arm_str_ofrplr(cpu, instr); },
		0x0784 | 0x078c => { arm_str_ofrpar(cpu, instr); },
		0x0786 | 0x078e => { arm_str_ofrprr(cpu, instr); },
		0x0790 | 0x0798 => { arm_ldr_ofrpll(cpu, instr); },
		0x0792 | 0x079a => { arm_ldr_ofrplr(cpu, instr); },
		0x0794 | 0x079c => { arm_ldr_ofrpar(cpu, instr); },
		0x0796 | 0x079e => { arm_ldr_ofrprr(cpu, instr); },
		0x07a0 | 0x07a8 => { arm_str_prrpll(cpu, instr); },
		0x07a2 | 0x07aa => { arm_str_prrplr(cpu, instr); },
		0x07a4 | 0x07ac => { arm_str_prrpar(cpu, instr); },
		0x07a6 | 0x07ae => { arm_str_prrprr(cpu, instr); },
		0x07b0 | 0x07b8 => { arm_ldr_prrpll(cpu, instr); },
		0x07b2 | 0x07ba => { arm_ldr_prrplr(cpu, instr); },
		0x07b4 | 0x07bc => { arm_ldr_prrpar(cpu, instr); },
		0x07b6 | 0x07be => { arm_ldr_prrprr(cpu, instr); },
		0x07c0 | 0x07c8 => { arm_strb_ofrpll(cpu, instr); },
		0x07c2 | 0x07ca => { arm_strb_ofrplr(cpu, instr); },
		0x07c4 | 0x07cc => { arm_strb_ofrpar(cpu, instr); },
		0x07c6 | 0x07ce => { arm_strb_ofrprr(cpu, instr); },
		0x07d0 | 0x07d8 => { arm_ldrb_ofrpll(cpu, instr); },
		0x07d2 | 0x07da => { arm_ldrb_ofrplr(cpu, instr); },
		0x07d4 | 0x07dc => { arm_ldrb_ofrpar(cpu, instr); },
		0x07d6 | 0x07de => { arm_ldrb_ofrprr(cpu, instr); },
		0x07e0 | 0x07e8 => { arm_strb_prrpll(cpu, instr); },
		0x07e2 | 0x07ea => { arm_strb_prrplr(cpu, instr); },
		0x07e4 | 0x07ec => { arm_strb_prrpar(cpu, instr); },
		0x07e6 | 0x07ee => { arm_strb_prrprr(cpu, instr); },
		0x07f0 | 0x07f8 => { arm_ldrb_prrpll(cpu, instr); },
		0x07f2 | 0x07fa => { arm_ldrb_prrplr(cpu, instr); },
		0x07f4 | 0x07fc => { arm_ldrb_prrpar(cpu, instr); },
		0x07f6 | 0x07fe => { arm_ldrb_prrprr(cpu, instr); },
		0x0800 ... 0x080f => { arm_stmda(cpu, instr); },
		0x0810 ... 0x081f => { arm_ldmda(cpu, instr); },
		0x0820 ... 0x082f => { arm_stmda_w(cpu, instr); },
		0x0830 ... 0x083f => { arm_ldmda_w(cpu, instr); },
		0x0840 ... 0x084f => { arm_stmda_u(cpu, instr); },
		0x0850 ... 0x085f => { arm_ldmda_u(cpu, instr); },
		0x0860 ... 0x086f => { arm_stmda_uw(cpu, instr); },
		0x0870 ... 0x087f => { arm_ldmda_uw(cpu, instr); },
		0x0880 ... 0x088f => { arm_stmia(cpu, instr); },
		0x0890 ... 0x089f => { arm_ldmia(cpu, instr); },
		0x08a0 ... 0x08af => { arm_stmia_w(cpu, instr); },
		0x08b0 ... 0x08bf => { arm_ldmia_w(cpu, instr); },
		0x08c0 ... 0x08cf => { arm_stmia_u(cpu, instr); },
		0x08d0 ... 0x08df => { arm_ldmia_u(cpu, instr); },
		0x08e0 ... 0x08ef => { arm_stmia_uw(cpu, instr); },
		0x08f0 ... 0x08ff => { arm_ldmia_uw(cpu, instr); },
		0x0900 ... 0x090f => { arm_stmdb(cpu, instr); },
		0x0910 ... 0x091f => { arm_ldmdb(cpu, instr); },
		0x0920 ... 0x092f => { arm_stmdb_w(cpu, instr); },
		0x0930 ... 0x093f => { arm_ldmdb_w(cpu, instr); },
		0x0940 ... 0x094f => { arm_stmdb_u(cpu, instr); },
		0x0950 ... 0x095f => { arm_ldmdb_u(cpu, instr); },
		0x0960 ... 0x096f => { arm_stmdb_uw(cpu, instr); },
		0x0970 ... 0x097f => { arm_ldmdb_uw(cpu, instr); },
		0x0980 ... 0x098f => { arm_stmib(cpu, instr); },
		0x0990 ... 0x099f => { arm_ldmib(cpu, instr); },
		0x09a0 ... 0x09af => { arm_stmib_w(cpu, instr); },
		0x09b0 ... 0x09bf => { arm_ldmib_w(cpu, instr); },
		0x09c0 ... 0x09cf => { arm_stmib_u(cpu, instr); },
		0x09d0 ... 0x09df => { arm_ldmib_u(cpu, instr); },
		0x09e0 ... 0x09ef => { arm_stmib_uw(cpu, instr); },
		0x09f0 ... 0x09ff => { arm_ldmib_uw(cpu, instr); },
		0x0a00 ... 0x0aff => { arm_b(cpu, instr); },
		0x0b00 ... 0x0bff => { arm_bl(cpu, instr); },
		0x0c00 ... 0x0c0f | 0x0c40 ... 0x0c4f => { arm_stc_ofm(cpu, instr); },
		0x0c10 ... 0x0c1f | 0x0c50 ... 0x0c5f => { arm_ldc_ofm(cpu, instr); },
		0x0c20 ... 0x0c2f | 0x0c60 ... 0x0c6f => { arm_stc_prm(cpu, instr); },
		0x0c30 ... 0x0c3f | 0x0c70 ... 0x0c7f => { arm_ldc_prm(cpu, instr); },
		0x0c80 ... 0x0c8f | 0x0cc0 ... 0x0ccf => { arm_stc_ofp(cpu, instr); },
		0x0c90 ... 0x0c9f | 0x0cd0 ... 0x0cdf => { arm_ldc_ofp(cpu, instr); },
		0x0ca0 ... 0x0caf | 0x0ce0 ... 0x0cef => { arm_stc_prp(cpu, instr); },
		0x0cb0 ... 0x0cbf | 0x0cf0 ... 0x0cff => { arm_ldc_prp(cpu, instr); },
		0x0d00 ... 0x0d0f | 0x0d40 ... 0x0d4f => { arm_stc_unm(cpu, instr); },
		0x0d10 ... 0x0d1f | 0x0d50 ... 0x0d5f => { arm_ldc_unm(cpu, instr); },
		0x0d20 ... 0x0d2f | 0x0d60 ... 0x0d6f => { arm_stc_ptm(cpu, instr); },
		0x0d30 ... 0x0d3f | 0x0d70 ... 0x0d7f => { arm_ldc_ptm(cpu, instr); },
		0x0d80 ... 0x0d8f | 0x0dc0 ... 0x0dcf => { arm_stc_unp(cpu, instr); },
		0x0d90 ... 0x0d9f | 0x0dd0 ... 0x0ddf => { arm_ldc_unp(cpu, instr); },
		0x0da0 ... 0x0daf | 0x0de0 ... 0x0def => { arm_stc_ptp(cpu, instr); },
		0x0db0 ... 0x0dbf | 0x0df0 ... 0x0dff => { arm_ldc_ptp(cpu, instr); },
		0x0e00 | 0x0e02 | 0x0e04 | 0x0e06 | 0x0e08 | 0x0e0a | 0x0e0c | 0x0e0e | 0x0e10 | 0x0e12 | 0x0e14 | 0x0e16 | 0x0e18 | 0x0e1a | 0x0e1c | 0x0e1e | 0x0e20 | 0x0e22 | 0x0e24 | 0x0e26 | 0x0e28 | 0x0e2a | 0x0e2c | 0x0e2e | 0x0e30 | 0x0e32 | 0x0e34 | 0x0e36 | 0x0e38 | 0x0e3a | 0x0e3c | 0x0e3e | 0x0e40 | 0x0e42 | 0x0e44 | 0x0e46 | 0x0e48 | 0x0e4a | 0x0e4c | 0x0e4e | 0x0e50 | 0x0e52 | 0x0e54 | 0x0e56 | 0x0e58 | 0x0e5a | 0x0e5c | 0x0e5e | 0x0e60 | 0x0e62 | 0x0e64 | 0x0e66 | 0x0e68 | 0x0e6a | 0x0e6c | 0x0e6e | 0x0e70 | 0x0e72 | 0x0e74 | 0x0e76 | 0x0e78 | 0x0e7a | 0x0e7c | 0x0e7e | 0x0e80 | 0x0e82 | 0x0e84 | 0x0e86 | 0x0e88 | 0x0e8a | 0x0e8c | 0x0e8e | 0x0e90 | 0x0e92 | 0x0e94 | 0x0e96 | 0x0e98 | 0x0e9a | 0x0e9c | 0x0e9e | 0x0ea0 | 0x0ea2 | 0x0ea4 | 0x0ea6 | 0x0ea8 | 0x0eaa | 0x0eac | 0x0eae | 0x0eb0 | 0x0eb2 | 0x0eb4 | 0x0eb6 | 0x0eb8 | 0x0eba | 0x0ebc | 0x0ebe | 0x0ec0 | 0x0ec2 | 0x0ec4 | 0x0ec6 | 0x0ec8 | 0x0eca | 0x0ecc | 0x0ece | 0x0ed0 | 0x0ed2 | 0x0ed4 | 0x0ed6 | 0x0ed8 | 0x0eda | 0x0edc | 0x0ede | 0x0ee0 | 0x0ee2 | 0x0ee4 | 0x0ee6 | 0x0ee8 | 0x0eea | 0x0eec | 0x0eee | 0x0ef0 | 0x0ef2 | 0x0ef4 | 0x0ef6 | 0x0ef8 | 0x0efa | 0x0efc | 0x0efe => { arm_cdp(cpu, instr); },
		0x0e01 | 0x0e03 | 0x0e05 | 0x0e07 | 0x0e09 | 0x0e0b | 0x0e0d | 0x0e0f | 0x0e21 | 0x0e23 | 0x0e25 | 0x0e27 | 0x0e29 | 0x0e2b | 0x0e2d | 0x0e2f | 0x0e41 | 0x0e43 | 0x0e45 | 0x0e47 | 0x0e49 | 0x0e4b | 0x0e4d | 0x0e4f | 0x0e61 | 0x0e63 | 0x0e65 | 0x0e67 | 0x0e69 | 0x0e6b | 0x0e6d | 0x0e6f | 0x0e81 | 0x0e83 | 0x0e85 | 0x0e87 | 0x0e89 | 0x0e8b | 0x0e8d | 0x0e8f | 0x0ea1 | 0x0ea3 | 0x0ea5 | 0x0ea7 | 0x0ea9 | 0x0eab | 0x0ead | 0x0eaf | 0x0ec1 | 0x0ec3 | 0x0ec5 | 0x0ec7 | 0x0ec9 | 0x0ecb | 0x0ecd | 0x0ecf | 0x0ee1 | 0x0ee3 | 0x0ee5 | 0x0ee7 | 0x0ee9 | 0x0eeb | 0x0eed | 0x0eef => { arm_mcr(cpu, instr); },
		0x0e11 | 0x0e13 | 0x0e15 | 0x0e17 | 0x0e19 | 0x0e1b | 0x0e1d | 0x0e1f | 0x0e31 | 0x0e33 | 0x0e35 | 0x0e37 | 0x0e39 | 0x0e3b | 0x0e3d | 0x0e3f | 0x0e51 | 0x0e53 | 0x0e55 | 0x0e57 | 0x0e59 | 0x0e5b | 0x0e5d | 0x0e5f | 0x0e71 | 0x0e73 | 0x0e75 | 0x0e77 | 0x0e79 | 0x0e7b | 0x0e7d | 0x0e7f | 0x0e91 | 0x0e93 | 0x0e95 | 0x0e97 | 0x0e99 | 0x0e9b | 0x0e9d | 0x0e9f | 0x0eb1 | 0x0eb3 | 0x0eb5 | 0x0eb7 | 0x0eb9 | 0x0ebb | 0x0ebd | 0x0ebf | 0x0ed1 | 0x0ed3 | 0x0ed5 | 0x0ed7 | 0x0ed9 | 0x0edb | 0x0edd | 0x0edf | 0x0ef1 | 0x0ef3 | 0x0ef5 | 0x0ef7 | 0x0ef9 | 0x0efb | 0x0efd | 0x0eff => { arm_mrc(cpu, instr); },
		0x0f00 ... 0x0fff => { arm_swi(cpu, instr); },
		_ => { unreachable!() }
	}
}